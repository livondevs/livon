name: Check package.json version

on:
  pull_request:
    types: [synchronize, opened, reopened]
    branches:
      - beta

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Check package.json version format
        run: |
          VERSION=$(jq -r '.version' ./npm-pkgs/lunas/package.json)
          echo "Detected version: $VERSION"
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+$ ]]; then
            echo "‚úÖ Version format is correct"
          else
            echo "‚ùå Version format is incorrect"
            exit 1
          fi

      - name: Delete previous bot comments
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          COMMENTS=$(gh pr view $PR_NUMBER --json comments -q '.comments[].id')

          for CID in $COMMENTS; do
            BODY=$(gh api graphql -F id=$CID -f query='
              query($id: ID!) {
                node(id: $id) {
                  ... on IssueComment {
                    id
                    body
                    author {
                      login
                    }
                  }
                }
              }' --jq '.data.node')

            AUTHOR=$(echo "$BODY" | jq -r '.author.login')
            COMMENT_BODY=$(echo "$BODY" | jq -r '.body')

            if [[ "$AUTHOR" == "github-actions[bot]" && "$COMMENT_BODY" == *"adheres to the beta version format"* ]]; then
              echo "üßπ Deleting previous bot comment ID $CID"
              gh api -X DELETE "repos/${{ github.repository }}/issues/comments/$CID"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR review comment
        run: |
          NEW_VERSION=$(jq -r '.version' ./npm-pkgs/lunas/package.json)
          CURRENT_VERSION=$(npm show lunas@beta version || echo "N/A")
          gh pr comment ${{ github.event.pull_request.number }} --body "‚úÖ The version in package.json \`$NEW_VERSION\` adheres to the beta version format.  
          üì¶ Current version in npm is \`$CURRENT_VERSION\`."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
