name: Check package.json version

on:
  pull_request:
    types: [synchronize, opened, reopened]
    branches:
      - beta

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Check package.json version format
        run: |
          VERSION=$(jq -r '.version' ./npm-pkgs/lunas/package.json)
          echo "Detected version: $VERSION"
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+$ ]]; then
            echo "‚úÖ Version format is correct"
          else
            echo "‚ùå Version format is incorrect"
            exit 1
          fi

      - name: Delete previous bot comments (Debug Mode, fixed PR number 77)
        run: |
          # Fixed pull request number for debugging
          PR_NUMBER=77
          echo "Using fixed PR_NUMBER: $PR_NUMBER"

          # Retrieve comment IDs
          COMMENTS=$(gh pr view $PR_NUMBER --json comments -q '.comments[].id')
          echo "Found comment IDs: $COMMENTS"

          for CID in $COMMENTS; do
            echo "Processing comment ID: $CID"
            BODY=$(gh api graphql -F id=$CID -f query='\
              query($id: ID!) {\
                node(id: $id) {\
                  ... on IssueComment {\
                    id\
                    body\
                    author {\
                      login\
                    }\
                  }\
                }\
              }' --jq '.data.node')
            
            echo "Raw BODY: $BODY"
            
            AUTHOR=$(echo "$BODY" | jq -r '.author.login')
            COMMENT_BODY=$(echo "$BODY" | jq -r '.body')
            echo "Author: $AUTHOR"
            echo "Comment body: $COMMENT_BODY"
            
            # Check if the comment is from github-actions[bot] and includes our identifier text for beta version format.
            if [[ "$AUTHOR" == "github-actions[bot]" && "$COMMENT_BODY" == *"beta version format"* ]]; then
              echo "üßπ Deleting previous bot comment ID $CID"
              gh api -X DELETE "repos/${{ github.repository }}/issues/comments/$CID"
            else
              echo "Skipping comment ID $CID"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR review comment on failure
        if: ${{ failure() }}
        run: |
          NEW_VERSION=$(jq -r '.version' ./npm-pkgs/lunas/package.json)
          echo "Posting failure comment for version: $NEW_VERSION"
          gh pr comment 77 --body "‚ùå The version in package.json '$NEW_VERSION' does not adhere to the beta version format. Please correct it."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR review comment on success
        if: ${{ success() }}
        run: |
          CURRENT_VERSION=$(npm show lunas@beta version || echo "N/A")
          NEW_VERSION=$(jq -r '.version' ./npm-pkgs/lunas/package.json)
          echo "Posting success comment for version: $NEW_VERSION and current version: $CURRENT_VERSION"
          gh pr comment 77 --body "‚úÖ The version in package.json '$NEW_VERSION' adheres to the beta version format.  
          üì¶ Current version in npm is '$CURRENT_VERSION'."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
